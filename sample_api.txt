# Typical comments

# Variable declarations
CHIP_ROOT=/home/andrei/devel/connectedhomeip
COMPILE_ROOT=${CHIP_ROOT}/out/linux-x64-all-clusters-clang
ZAPGEN_ROOT=${COMPILE_ROOT}/gen/third_party/connectedhomeip/examples/all-clusters-app/all-clusters-common/zapgen/
CODEGEN_ROOT=${COMPILE_ROOT}/gen/third_party/connectedhomeip/examples/all-clusters-app/all-clusters-common/app

# Sources define what sources to load
# Headers are generally found, however cpp files need to be loaded
# 
# globbing inputs will use any previously defined includes
input {
    includes from compiledb ${COMPILE_ROOT}/compile_commands.json

    include_dir ${ZAPGEN_ROOT}
    include_dir ${CODEGEN_ROOT}
    
    # you can also load source file paths from compile databases
    # this is a separate step from include paths
    sources from compiledb ${COMPILE_ROOT}/compile_commands.json

    # Only SRC/HDR will be loaded anyway, so glob **/* is ok
    # Loading sources from compiledb may be more accurate SOMETIMES
    glob ${CHIP_ROOT}/src/app/**/*
    glob ${ZAPGEN_ROOT}/**/*
    glob ${CODEGEN_ROOT}/**/*
    glob ${CHIP_ROOT}/zzz_generated/app-common/app-common/**/*
}

# Options for dependency graphs
# By default NOTHING is kept and NOTHING is grouped
graph {
   map {
      ${CHIP_ROOT}/src/app => app::
      ${ZAPGEN_ROOT} => zapgen::
      ${CODEGEN_ROOT} => codegen::
      ${CHIP_ROOT}/zzz_generated/app-common => app-common::

      keep app::
      keep zapgen::
      keep codegen::
      keep app-common::

      drop app::clusters/
      drop app::server/java/
      drop app::tests/
   }

   group {
      # Load all the specified targets for grouping
      # Group logic:
      #   - they must be in order of application
      #   - first group wins (a file belongs to one group only)
      gn root ${COMPILE_ROOT} target //src/app/* sources ${CHIP_ROOT}

      # manually defined group
      manual content-app-files {
         # Grouping is done by mapped names
         app::app-platform/ContentApp.h
         app::app-platform/ContentApp.cpp
         app::app-platform/ContentAppPlatform.h
         app::app-platform/ContentAppPlatform.cpp
      }

      manual zap-gen {
         zapgen::zap-generated/endpoint_config.h
         zapgen::zap-generated/gen_config.h
      }

      manual zap-gen-access {
         zapgen::zap-generated/access.h
      }

      manual zap-gen-clustercommandhandler {
         zapgen::zap-generated/IMClusterCommandHandler.cpp
      }

      manual dynamic-server {
         app::dynamic_server/AccessControl.cpp
         app::dynamic_server/AccessControl.h
         app::dynamic_server/DynamicDispatcher.cpp
      }

      manual handler-headers {
        app::ReadHandler.h
        app::WriteHandler.h
        app::CommandHandler.h
      }


       # groups together h and cpp files
       # IFF they do not already belong to some other group
       group_source_header
   }

   zoom {
     # focus: is supported to focus links on those
     # //src/app:app
     # //src/app:interaction-model
     # focus: handler-headers

     app::util/privilege-storage
     zap-gen-access
   }
}
